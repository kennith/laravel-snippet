{
    "Str::after": {
        "prefix": "Str::after",
        "body": [
            "Str::after"
        ],
        "description": "The `Str::after` method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string."
    },
    "Str::afterLast": {
        "prefix": "Str::afterLast",
        "body": [
            "Str::afterLast"
        ],
        "description": "The `Str::afterLast` method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string."
    },
    "Str::ascii": {
        "prefix": "Str::ascii",
        "body": [
            "Str::ascii"
        ],
        "description": "The `Str::ascii` method will attempt to transliterate the string into an ASCII value."
    },
    "Str::before": {
        "prefix": "Str::before",
        "body": [
            "Str::before"
        ],
        "description": "The `Str::before` method returns everything before the given value in a string."
    },
    "Str::beforeLast": {
        "prefix": "Str::beforeLast",
        "body": [
            "Str::beforeLast"
        ],
        "description": "The `Str::beforeLast` method returns everything before the last occurrence of the given value in a string."
    },
    "Str::between": {
        "prefix": "Str::between",
        "body": [
            "Str::between"
        ],
        "description": "The `Str::between` method returns the portion of a string between two values."
    },
    "Str::camel": {
        "prefix": "Str::camel",
        "body": [
            "Str::camel"
        ],
        "description": "The `Str::camel` method converts the given string to `camelCase`."
    },
    "Str::contains": {
        "prefix": "Str::contains",
        "body": [
            "Str::contains"
        ],
        "description": "The `Str::contains` method determines if the given string contains the given value (case sensitive)."
    },
    "Str::containsAll": {
        "prefix": "Str::containsAll",
        "body": [
            "Str::containsAll"
        ],
        "description": "The `Str::containsAll` method determines if the given string contains all array values."
    },
    "Str::endsWith": {
        "prefix": "Str::endsWith",
        "body": [
            "Str::endsWith"
        ],
        "description": "The `Str::endsWith` method determines if the given string ends with the given value."
    },
    "Str::finish": {
        "prefix": "Str::finish",
        "body": [
            "Str::finish"
        ],
        "description": "The `Str::finish` method adds a single instance of the given value to a string if it does not already end with the value."
    },
    "Str::is": {
        "prefix": "Str::is",
        "body": [
            "Str::is"
        ],
        "description": "The `Str::is` method determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards."
    },
    "Str::isAscii": {
        "prefix": "Str::isAscii",
        "body": [
            "Str::isAscii"
        ],
        "description": "The `Str::isAscii` method determines if a given string is 7 bit ASCII."
    },
    "Str::isUuid": {
        "prefix": "Str::isUuid",
        "body": [
            "Str::isUuid"
        ],
        "description": "The `Str::isUuid` method determines if the given string is a valid UUID."
    },
    "Str::kebab": {
        "prefix": "Str::kebab",
        "body": [
            "Str::kebab"
        ],
        "description": "The `Str::kebab` method converts the given string to `kebab-case`."
    },
    "Str::length": {
        "prefix": "Str::length",
        "body": [
            "Str::length"
        ],
        "description": "The `Str::length` method returns the length of the given string."
    },
    "Str::limit": {
        "prefix": "Str::limit",
        "body": [
            "Str::limit"
        ],
        "description": "The `Str::limit` method truncates the given string at the specified length."
    },
    "Str::lower": {
        "prefix": "Str::lower",
        "body": [
            "Str::lower"
        ],
        "description": "The `Str::lower` method converts the given string to lowercase."
    },
    "Str::orderedUuid": {
        "prefix": "Str::orderedUuid",
        "body": [
            "Str::orderedUuid"
        ],
        "description": "The `Str::orderedUuid` method generates a \"timestamp first\" UUID that may be efficiently stored in an indexed database column."
    },
    "Str::plural": {
        "prefix": "Str::plural",
        "body": [
            "Str::plural"
        ],
        "description": "The `Str::plural` method converts a single word string to its plural form. This function currently only supports the English language."
    },
    "Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes": {
        "prefix": "Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes",
        "body": [
            "Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes"
        ],
        "description": "The `Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes` function."
    },
    "Str::replaceArray": {
        "prefix": "Str::replaceArray",
        "body": [
            "Str::replaceArray"
        ],
        "description": "The `Str::replaceArray` method replaces a given value in the string sequentially using an array."
    },
    "Str::replaceFirst": {
        "prefix": "Str::replaceFirst",
        "body": [
            "Str::replaceFirst"
        ],
        "description": "The `Str::replaceFirst` method replaces the first occurrence of a given value in a string."
    },
    "Str::replaceLast": {
        "prefix": "Str::replaceLast",
        "body": [
            "Str::replaceLast"
        ],
        "description": "The `Str::replaceLast` method replaces the last occurrence of a given value in a string."
    },
    "Str::singular": {
        "prefix": "Str::singular",
        "body": [
            "Str::singular"
        ],
        "description": "The `Str::singular` method converts a string to its singular form. This function currently only supports the English language."
    },
    "Str::slug": {
        "prefix": "Str::slug",
        "body": [
            "Str::slug"
        ],
        "description": "The `Str::slug` method generates a URL friendly \"slug\" from the given string."
    },
    "Str::snake": {
        "prefix": "Str::snake",
        "body": [
            "Str::snake"
        ],
        "description": "The `Str::snake` method converts the given string to `snake_case`."
    },
    "Str::start": {
        "prefix": "Str::start",
        "body": [
            "Str::start"
        ],
        "description": "The `Str::start` method adds a single instance of the given value to a string if it does not already start with the value."
    },
    "Str::startsWith": {
        "prefix": "Str::startsWith",
        "body": [
            "Str::startsWith"
        ],
        "description": "The `Str::startsWith` method determines if the given string begins with the given value."
    },
    "Str::studly": {
        "prefix": "Str::studly",
        "body": [
            "Str::studly"
        ],
        "description": "The `Str::studly` method converts the given string to `StudlyCase`."
    },
    "Str::substr": {
        "prefix": "Str::substr",
        "body": [
            "Str::substr"
        ],
        "description": "The `Str::substr` method returns the portion of string specified by the start and length parameters."
    },
    "Str::title": {
        "prefix": "Str::title",
        "body": [
            "Str::title"
        ],
        "description": "The `Str::title` method converts the given string to `Title Case`."
    },
    "Str::ucfirst": {
        "prefix": "Str::ucfirst",
        "body": [
            "Str::ucfirst"
        ],
        "description": "The `Str::ucfirst` method returns the given string with the first character capitalized."
    },
    "Str::upper": {
        "prefix": "Str::upper",
        "body": [
            "Str::upper"
        ],
        "description": "The `Str::upper` method converts the given string to uppercase."
    },
    "Str::uuid": {
        "prefix": "Str::uuid",
        "body": [
            "Str::uuid"
        ],
        "description": "The `Str::uuid` method generates a UUID (version 4)."
    },
    "Str::words": {
        "prefix": "Str::words",
        "body": [
            "Str::words"
        ],
        "description": "The `Str::words` method limits the number of words in a string."
    }
}